package CGDitsRoadwayEquipment
public
	with EMV2;
	
	system cgditsrequip
		features
			trafficSensorandVideoControl_in : in data port;
			rodwayWarningSystemControl_in : in data port;
			environmentSensorControl_in : in data port;
			trafficSituationData_in : in data port;
			trafficFlowImgs_out : out data port;
			rdwayWarnSysStat_out : out data port;
			envSensData_out : out data port;
			vehicleSignageLocalData_out : out data port;
			DriverInfo_out : out data port;
			
		flows
			system_sensorandVideovc_sink : flow sink trafficSensorandVideoControl_in;
			system_warsyscntrl_sink : flow sink rodwayWarningSystemControl_in;
			system_envsenscntrl_sink : flow sink environmentSensorControl_in;
			system_situ_sink : flow sink trafficSituationData_in;
			system_flimg_source : flow source trafficFlowImgs_out;
			system_rdwarnstat_source : flow source rdwayWarnSysStat_out;
			system_sendata_source : flow source envSensData_out;
			system_vsign_source : flow source vehicleSignageLocalData_out;
			system_dinfo_source : flow source DriverInfo_out;
		
		
		annex EMV2 {**
			use types error_library; 
		
			error propagations
				trafficSensorandVideoControl_in : in propagation {NoValue, BadValue, LateValue};
				rodwayWarningSystemControl_in : in propagation {NoValue,BadValue, LateValue};
				environmentSensorControl_in : in propagation {NoValue,BadValue, LateValue};
				trafficSituationData_in : in propagation {NoValue,BadValue, LateValue};
				trafficFlowImgs_out : out propagation {NoValue,BadValue, LateValue};
				rdwayWarnSysStat_out : out propagation {NoValue,BadValue, LateValue};
				envSensData_out : out propagation {NoValue,BadValue, LateValue};
				DriverInfo_out : out propagation {NoValue,BadValue, LateValue};
			flows
				ef0 : error sink trafficSensorandVideoControl_in{NoValue,BadValue, LateValue};
				ef1 : error sink rodwayWarningSystemControl_in{NoValue,BadValue, LateValue};
				ef2 : error sink environmentSensorControl_in{NoValue,BadValue, LateValue};
				ef3 : error sink trafficSituationData_in{NoValue,BadValue, LateValue};
				ef4 : error source trafficFlowImgs_out{NoValue,BadValue, LateValue};
				ef5 : error source rdwayWarnSysStat_out{NoValue,BadValue, LateValue};
				ef6 : error source envSensData_out{NoValue,BadValue, LateValue};
				ef7 : error source DriverInfo_out{NoValue,BadValue, LateValue};
			end propagations;
			properties
				emv2::hazards => 
					([failure => "ValueError";	
				  	description => "No data , Invalid date or Late data from the Managment Control Center and Road side Equipment";
					])
			applies to trafficSensorandVideoControl_in.ValueError,rodwayWarningSystemControl_in.ValueError,
						environmentSensorControl_in.ValueError,trafficSituationData_in.ValueError,
						trafficFlowImgs_out.ValueError,rdwayWarnSysStat_out.ValueError,envSensData_out.ValueError,
						DriverInfo_out.ValueError;
		**};
		
	end cgditsrequip;

	system implementation cgditsrequip.impl
		subcomponents
			rowarn : system rowarn.impl;
			renmon : system renmon.impl;
			rbsurv : system rbsurv.impl;
			
	end cgditsrequip.impl;
	
	system rowarn
	end rowarn;
	system implementation rowarn.impl
		subcomponents
			speed:process speed.impl;
	end rowarn.impl;
	
	system renmon
	end renmon;
	system implementation renmon.impl
		subcomponents
			sig_confmonitor : process sig_confmonitor.impl;
			rep : process rep.impl;
	end renmon.impl;
	
	system rbsurv
	end rbsurv;
	system implementation rbsurv.impl
		subcomponents
			speedharm : process speedharm.impl;
			roadlighting : process roadlighting.impl;
			lanemgmt : process lanemgmt.impl;
	end rbsurv.impl;

	process speed
		features
			data_in : in data port;
			data_out : out data port;
	end speed;
	process implementation speed.impl
		subcomponents
			collectSpeed : thread collectSpeed.impl;
	end speed.impl;
	
	process sig_confmonitor
		features
			data_in : in data port;
			data_out : out data port;
	end sig_confmonitor;
	process implementation sig_confmonitor.impl
		subcomponents
			conflictSignals : thread conflictSignals.impl;
	end sig_confmonitor.impl;
	
	process rep
		features
			data_in : in data port;
			data_out : out data port;
	end rep;
	process implementation rep.impl
		subcomponents
			collectDatafromSensors : thread collectDatafromSensors.impl;
	end rep.impl;
	
	process speedharm
		features
			data_in : in data port;
			data_out : out data port;
	end speedharm;
	process implementation speedharm.impl
		subcomponents
			cntrlspeed : thread cntrlspeed.impl;
	end speedharm.impl;
	
	process roadlighting
		features
			data_in : in data port;
			data_out : out data port;
	end roadlighting;
	process implementation roadlighting.impl
		subcomponents
			rdlightmgmt : thread rdlightmgmt.impl;
	end roadlighting.impl;
	
	process lanemgmt
		features
			data_in : in data port;
			data_out : out data port;
	end lanemgmt;
	process implementation lanemgmt.impl
		subcomponents
			dynamicLanes : thread dynamicLanes.impl;
	end lanemgmt.impl;
	
	thread collectSpeed
	end collectSpeed;
	thread implementation collectSpeed.impl
	end collectSpeed.impl;
	
	thread conflictSignals
	end conflictSignals;
	thread implementation conflictSignals.impl
	end conflictSignals.impl;
	
	thread collectDatafromSensors
	end collectDatafromSensors;
	thread implementation collectDatafromSensors.impl
	end collectDatafromSensors.impl;
	
	
	thread dynamicLanes
	end dynamicLanes;
	thread implementation dynamicLanes.impl
	end dynamicLanes.impl;
	
	thread cntrlspeed
	end cntrlspeed;
	thread implementation cntrlspeed.impl
	end cntrlspeed.impl;
	
	thread rdlightmgmt
	end rdlightmgmt;
	thread implementation rdlightmgmt.impl
	end rdlightmgmt.impl;	
	
end CGDitsRoadwayEquipment;